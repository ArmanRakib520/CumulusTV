{"pages":[{"title":"CumulusTV","text":"CumulusTV is an Android app that lets users create and share IPTV channels and play them back on all of their devices. Most notably, it interfaces with Android TV's Live Channels app, and this allows you to turn any stream or website into a Live Channel. Features Add m3u8 streams directly or import entire playlists into the app Users can customize channel splashscreens, logo, genres, and more Supports Live Channels, making it easy to play your media on Android TV Don't know what to watch, there's several included streams to choose from If your URL is not a stream, it displays it in a WebView. What can you do with a web browser in Live Channels? Supports time shifting: you can pause video and go back in Live Channels Powered by the ChannelSurfer library Sync your channels through Google Drive and edit them anywhere through the standard JSON format Playback is done through Google's ExoPlayer library, so it supports any files ExoPlayer supports Getting Started Download You can download this app directly from Google Play. If you're looking to have the latest and greatest version, sign up for the beta. You can also check out the releases on GitHub. Stay Active Visit the Subreddit \/r\/CumulusTV is a budding community where users are able to go to discuss the app, propose features, and discuss bugs that they may find. Contributing Cumulus TV is open source and I welcome anyone to contribute to it. Feel free to open a pull request or file an issue.","tags":"","url":"index.html"},{"title":"Getting Started","text":"CumulusTV is an Android app that lets users create and share IPTV channels and HLS streams, then play them back on all of their devices. Most notably, it interfaces with Android TV's Live Channels app, and this allows you to turn any stream or website into a Live Channel. Features Add m3u8 streams directly or import entire playlists into the app Users can customize channel splashscreens, logo, genres, and more Supports Live Channels, making it easy to play your media on Android TV Don't know what to watch, there's several included streams to choose from If your URL is not a stream, it displays it in a WebView. What can you do with a web browser in Live Channels? Supports time shifting: you can pause video and go back in Live Channels Powered by the TIF Companion library Sync your channels through Google Drive and edit them anywhere through the standard JSON format Playback is done through Google's ExoPlayer library, so it supports any files ExoPlayer supports Channels are grouped by genre Getting Started Download You can download this app directly from Google Play. If you're looking to have the latest and greatest version, sign up for the beta. You can also check out the releases on GitHub. Stay Active Visit the Subreddit \/r\/CumulusTV is a budding community where users are able to go to discuss the app, propose features, and discuss bugs that they may find. Contributing Cumulus TV is open source and I welcome anyone to contribute to it. Feel free to open a pull request or file an issue. History This originally started from a thread on Reddit where a user wanted to add user-defined channels using m3u8 files. After a few weeks, I got the first demo published. Since then, many updates have been added to make it a key source of adding channels for thousands of users.","tags":"","url":"Getting_Started.html"},{"title":"Setting Up Google Drive","text":"Google Drive support allows users to sync your channel data with all your devices. Cumulus TV uses a proprietary format for storing and retrieving data. Actions in the app, such as importing M3u playlists or creating a channel, will automatically add these channels to the internal format and push changes to Google Drive. Setting up If you haven't connected to Google Drive before, select &quot;Connect to Google Drive&quot;. Then you'll be prompted to log into your Google account or select one from a list. After you've done this, you will be asked to create a JSON file if you haven't done so yet. If you have one already, you can say No. You can switch Google Drive files, allowing you to use another as the backend. When this happens, you have the option of rewriting that file or rewriting the local database. You can also manually request the file to be downloaded. Troubleshooting Google Drive only supports saving and retrieving of these JSON files. If the file isn't formatted properly, it will cause the app to become unstable and crash. At this point you will need to manually delete all app data in order to recover. If you want to import an M3u playlist, you must use another method.","tags":"","url":"Syncing\/Setting_Up_Google_Drive.html"},{"title":"Setting Up Live Channels","text":"Live Channels is an Android TV app that allows you to watch your streams in a centralized interface. It supports features such as time shifting, letting you pause and skip through live content. If you're using this app on a phone, it will not sync channels to Live Channels, as this feature isn't supported. Setting Up When you install the app and then open Live Channels for the first time, you will be prompted to setup the app. This starts an initial sync. You can see all the channels that sync on the right side. If there is a problem, it will be displayed on the right side. Channel List As you add more channels, these may be synced to the Live Channels, but may not appear. If this is the case, go to the Channel List setting in Live Channels and select all the channels you want to appear.","tags":"","url":"Syncing\/Setting_Up_Live_Channels.html"},{"title":"Importing Streams","text":"Streams can also be imported once through a URL or a full playlist. Importing Single Stream When you select an HLS Stream, the app selects an option allowing you to &quot;Create a Channel&quot;. By selecting this choice, you can easily add this stream to your app. By syncing with Google Drive, these channels can be added to all your devices. Importing Playlist There are two ways to import a playlist. From File First, you should download an m3u file to your device in a local folder. Then, from a file explorer, select that file. You can open it with &quot;Create a Channel&quot; and import all of the channels that were parsed. If that doesn't work, try to interpret the file as plain text and opening it with the app to import channels. From the Web When you select an M3U playlist from the web, there are two different activities that show up. The first will let you import those channels once. The other will create a direct link to that URL and pull files from it continually.","tags":"","url":"Syncing\/Importing_Streams.html"},{"title":"Editing JSON","text":"JSON The JavaScript Object Notation (JSON) format is a common format that is easy to pick up. Objects are stored in key-value pairs and can be stored in arrays. Get Started Create a File To get started with syncing, you need to have a file to store your data. If you don't have one, you can create one in the app. Select that option. You may need to authenticate with your Google account. Then you can navigate to the folder you want and give this new file a name. After that is done, your app will be synced. Select Pre-Existing File If you already have data from the app that you want to import, you can select Import File. You may need to authenticate with your Google account. After doing so, a dialog will appear where you'll be able to select the file for import. After selecting that file you will see a second dialog. This asks you how you want the sync process to occur: did you make modifications locally that you want saved to the file, or do you want to overwrite your local channels with the contents of that file. Select the option you want and then the file will be synced. Automatic Syncing The sync process is automatic. Whenever a change is made on your device, it is saved to the file in Google Drive. Other devices will periodically grab the resynced file. Sample JSON File Although the file is automatically generated and maintained in the app, you may want to manually edit it on your PC so that you don't have to type on a small keyboard or through a DPAD. A sample JSON file looks like one below: {&quot;channels&quot;: [ YOUR CHANNELS SHOULD GO HERE ], &quot;modified&quot;:1452205685079, &quot;possibleGenres&quot;:[&quot;ANIMAL_WILDLIFE&quot;, &quot;ANIMAL_WILDLIFE&quot;, &quot;ARTS&quot;, &quot;COMEDY&quot;, &quot;DRAMA&quot;, &quot;EDUCATION&quot;, &quot;ENTERTAINMENT&quot;, &quot;FAMILY_KIDS&quot;, &quot;GAMING&quot;, &quot;LIFE_STYLE&quot;, &quot;MOVIES&quot;, &quot;MUSIC&quot;, &quot;NEWS&quot;, &quot;PREMIER&quot;, &quot;SHOPPING&quot;, &quot;SPORTS&quot;, &quot;TECH_SCIENCE&quot;, &quot;TRAVEL&quot;] } Channels Array The array called channels contains every single channel that you've added in order of when you added them. Channel Object Each channel contains a series of properties that are used by CumulusTV to interface with Live Channels. number - The channel number that is displayed REQUIRED name - The title for the channel REQUIRED logo - A channel can have an optional logo that will appear in the electronic programming guide (EPG) url - This is the source location for the channel. It may be a video stream or any website. REQUIRED splashscreen - A channel may have an alternate image that is displayed on the screen while the video is loading genres - A channel can select several default genres for its programs that are used if the user filters channels in the electronic programming guide (EPG) epgUrl - A link to an XMLTV file containing EPG data for the stream. Optional. source - Leave this blank. It's an optional parameter if a third-party app is used to add a channel to the user's channel list Examples { &quot;number&quot;:&quot;1337&quot;, &quot;name&quot;:&quot;Montery Bay Aquarium&quot;, &quot;logo&quot;:&quot;http:\\\/\\\/static-cdn1.ustream.tv\\\/i\\\/channel\\\/live\\\/1_9600798,256x144,b:2015071514.jpg&quot;, &quot;url&quot;:&quot;http:\\\/\\\/iphone-streaming.ustream.tv\\\/uhls\\\/9600798\\\/streams\\\/live\\\/iphone\\\/playlist.m3u8&quot;, &quot;splashscreen&quot;:&quot;&quot;, &quot;genres&quot;:&quot;ANIMAL_WILDLIFE,FAMILY_KIDS,NEWS&quot;, &quot;source&quot;:&quot;&quot; }, { &quot;number&quot;:&quot;90&quot;, &quot;name&quot;:&quot;Artbeats Demo&quot;, &quot;logo&quot;:&quot;&quot;, &quot;url&quot;:&quot;http:\\\/\\\/cdn-fms.rbs.com.br\\\/hls-vod\\\/sample1_1500kbps.f4v.m3u8&quot;, &quot;splashscreen&quot;:&quot;&quot;, &quot;genres&quot;:&quot;ARTS&quot;, &quot;source&quot;:&quot;&quot; } JsonListing Instead of saving the channel metadata directly in the array, one can link to an m3u playlist of channels. Whenever the app is loaded, these URLs will be read and those channels will be updated. There are only two attributes needed. type - Must be set to jsonlisting for the app to identify it as such url - The playlist url Other attributes modified - This value is a timestamp, the number of milliseconds that have passed since January 1, 1970. It corresponds to the last time this file was modified. This doesn't need to be changed possibleGenres - This array exists so the user is able to see which genres can be chosen for their channels \\\/ and Escape Characters You may notice that the logo and url attributes contain pairs of backslashes and slashes. As a simple explanation, the backslash is called an &quot;escape character&quot; and must be placed in-front of a forward slash in order for the app to properly make sense of it. Note this is only required if you're editing it manually. The parsing is handled behind the scenes in the app. Coming Soon There are always ideas for how to improve the channel object and allow for more functionality. Some of the proposed changes are below. If you have a strong opinion, discuss it on the subreddit.","tags":"","url":"Syncing\/Editing_JSON.html"},{"title":"Creating a Program Guide","text":"Starting in CumulusTV 1.6.0, users can add URLs to an electronic programming guide (EPG) for each channel and that will populate the guide with information about the current and upcoming programs. The app can parse the XMLTV format, which is rather popular, in order to place programs in the guide. To add your own programs, add a link to am XMLTV file corresponding to a given channel. CumulusTV will refresh the program list and populate the EPG every time it does a sync. Adding to a Channel In the channel editor, there is a field for EPG Url. This field should contain a valid URL pointing to an XMLTV file. This file will be parsed and added to program data instead of generic programs. Importing through a Playlist The app's M3U parser can read EPG urls if the property epg-url is set.","tags":"","url":"EPG\/Creating_a_Program_Guide.html"},{"title":"XMLTV Parser","text":"The XMLTV parser is able to read EPG data and insert that into the program guide for a corresponding channel. Specification The file is inside a root tv tag Each program starts with a programme tag Each program contains these attributes start and stop - Times when this program is to air and end, respectively video-src - The URL pointing to the stream video-type - A text-based string indicating what type of video this is Each program has these children: title - The display name for this program desc - A longer description for this program icon - A child with a single attribute, src, which is artwork for the show or episode. This is required. category- There can be multiple children which state the genres for this program rating - A child that can have multiple values for each parental rating of this program If the provided XMLTV file does not match these specifications, the parser may not properly read it. The app may crash. Example &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; &lt;!DOCTYPE tv SYSTEM &quot;xmltv.dtd&quot;&gt; &lt;tv&gt; &lt;programme start=&quot;20150817000000 +0000&quot; stop=&quot;20150817000147 +0000&quot; video-src=&quot;https:\/\/commondatastorage.googleapis.com\/android-tv\/Sample%20videos\/April%20Fool's%202013\/Introducing%20Gmail%20Blue.mp4&quot; video-type=&quot;HTTP_PROGRESSIVE&quot;&gt; &lt;title&gt;Introducing Gmail Blue&lt;\/title&gt; &lt;desc&gt;Introducing Gmail Blue&lt;\/desc&gt; &lt;icon src=&quot;https:\/\/storage.googleapis.com\/android-tv\/images\/gmail.png&quot;\/&gt; &lt;category&gt;EDUCATION&lt;\/category&gt; &lt;category&gt;TECH_SCIENCE&lt;\/category&gt; &lt;rating system=&quot;com.android.tv&quot;&gt; &lt;value&gt;com.android.tv\/US_TV\/US_TV_14\/US_TV_D\/US_TV_L&lt;\/value&gt; &lt;\/rating&gt; &lt;\/programme&gt; &lt;programme start=&quot;20150817000147 +0000&quot; stop=&quot;20150817004502 +0000&quot; video-src=&quot;https:\/\/commondatastorage.googleapis.com\/gtv-videos-bucket\/sample\/GoogleIO-2014-CastingToTheFuture.mp4&quot; video-type=&quot;HTTP_PROGRESSIVE&quot;&gt; &lt;title&gt;Google I\/O 2014 - Casting To The Future&lt;\/title&gt; &lt;desc&gt;Google I\/O 2014 - Casting To The Future&lt;\/desc&gt; &lt;icon src=&quot;https:\/\/storage.googleapis.com\/gtv-videos-bucket\/sample\/images_480x270\/ToTheFuture2-480x270.jpg&quot;\/&gt; &lt;category&gt;EDUCATION&lt;\/category&gt; &lt;category&gt;TECH_SCIENCE&lt;\/category&gt; &lt;rating system=&quot;com.android.tv&quot;&gt; &lt;value&gt;com.android.tv\/US_TV\/US_TV_PG\/US_TV_D&lt;\/value&gt; &lt;\/rating&gt; &lt;\/programme&gt; &lt;programme start=&quot;20150817004502 +0000&quot; stop=&quot;20150817005902 +0000&quot; video-src=&quot;https:\/\/commondatastorage.googleapis.com\/gtv-videos-bucket\/sample\/GoogleIO-2014-MakingGoogleCastReadyAppsDiscoverable.mp4&quot; video-type=&quot;HTTP_PROGRESSIVE&quot;&gt; &lt;title&gt;Google I\/O 2014 - Making Google Cast Ready Apps Discoverable&lt;\/title&gt; &lt;desc&gt;Google I\/O 2014 - Making Google Cast Ready Apps Discoverable&lt;\/desc&gt; &lt;icon src=&quot;https:\/\/storage.googleapis.com\/gtv-videos-bucket\/sample\/images_480x270\/MakingGoogleCastReadyAppsDiscoverable-480-270.jpg&quot;\/&gt; &lt;category&gt;EDUCATION&lt;\/category&gt; &lt;category&gt;TECH_SCIENCE&lt;\/category&gt; &lt;rating system=&quot;com.android.tv&quot;&gt; &lt;value&gt;com.android.tv\/US_TV\/US_TV_14\/US_TV_D\/US_TV_L&lt;\/value&gt; &lt;\/rating&gt; &lt;\/programme&gt; &lt;programme start=&quot;20150817005902 +0000&quot; stop=&quot;20150817010113 +0000&quot; video-src=&quot;https:\/\/commondatastorage.googleapis.com\/android-tv\/Sample%20videos\/April%20Fool's%202013\/Introducing%20Google%20Fiber%20to%20the%20Pole.mp4&quot; video-type=&quot;HTTP_PROGRESSIVE&quot;&gt; &lt;title&gt;Introducing Google Fiber to the Pole&lt;\/title&gt; &lt;desc&gt;Introducing Google Fiber to the Pole.&lt;\/desc&gt; &lt;icon src=&quot;https:\/\/storage.googleapis.com\/android-tv\/images\/fiber.png&quot;\/&gt; &lt;category&gt;EDUCATION&lt;\/category&gt; &lt;category&gt;TECH_SCIENCE&lt;\/category&gt; &lt;rating system=&quot;com.android.tv&quot;&gt; &lt;value&gt;com.android.tv\/US_TV\/US_TV_PG\/US_TV_D&lt;\/value&gt; &lt;\/rating&gt; &lt;\/programme&gt; &lt;programme start=&quot;20150817010113 +0000&quot; stop=&quot;20150817010315 +0000&quot; video-src=&quot;https:\/\/commondatastorage.googleapis.com\/android-tv\/Sample%20videos\/April%20Fool's%202013\/Introducing%20Google%20Fiber%20to%20the%20Pole.mp4&quot; video-type=&quot;HTTP_PROGRESSIVE&quot;&gt; &lt;title&gt;Introducing Google Nose&lt;\/title&gt; &lt;desc&gt;Introducing Google Nose&lt;\/desc&gt; &lt;icon src=&quot;https:\/\/storage.googleapis.com\/android-tv\/images\/fiber.png&quot;\/&gt; &lt;category&gt;EDUCATION&lt;\/category&gt; &lt;category&gt;TECH_SCIENCE&lt;\/category&gt; &lt;rating system=&quot;US_TV&quot;&gt; &lt;value&gt;com.android.tv\/US_TV\/US_TV_PG\/US_TV_D&lt;\/value&gt; &lt;\/rating&gt; &lt;rating system=&quot;com.android.tv&quot;&gt; &lt;value&gt;com.android.tv\/US_TV\/US_TV_PG\/US_TV_D&lt;\/value&gt; &lt;\/rating&gt; &lt;\/programme&gt; &lt;\/tv&gt;","tags":"","url":"EPG\/XMLTV_Parser.html"},{"title":"Quick Settings","text":"Quick settings are a way to quickly access information and actions about a stream in the Live Channels app using the app link. To open it, just select the Quick Settings card.","tags":"","url":"Features\/Quick_Settings.html"},{"title":"Exporting M3u Playlist","text":"You are able to import M3u playlists into Cumulus TV, and this parses the data and interprets it into a custom data format. The app also lets users export their channel data back to an M3u playlist. To do this on mobile, go to the &quot;More&quot; option and select &quot;Export M3u Playlist&quot;. This feature currently is not available on Android TV.","tags":"","url":"Features\/Exporting_M3u_Playlist.html"},{"title":"How to find Channels","text":"IPTV and HLS streams are common around the web. Try using a search engine or joining a community where they may post some streams and playlists. M3u Playlists M3u playlists are a common way to store a series of streams in a single file. These playlists can be linked directly into the app or imported.","tags":"","url":"IPTV_Channels\/How_to_find_Channels.html"},{"title":"Loading Website","text":"If the media url is not a valid video, the url will be loaded in a WebView. This expands the number of visual experiences available in Live Channels by allowing different types of passive experiences to be available. *For example, http:\/\/time.is displays Live Channels as a website* YouTube videos could in theory be loaded, although support for playing these is not available yet because they must be manually started. The Android WebView does support media files, but not any content using Adobe Flash.","tags":"","url":"IPTV_Channels\/Loading_Website.html"},{"title":"Radio","text":"Some streams, like Beats One, are audio-only streams. There is no visual content, but the app is able to play the music without issue. If you edit the JSON file, you can add an attribute to that channel audioOnly. By setting this to true, a themed visual display will be shown in Live Channels as the audio plays.","tags":"","url":"IPTV_Channels\/Radio.html"},{"title":"Parsing M3U Playlists","text":"When you import an M3u file or create a link to it, the application's M3u parser will read each line and process the data. Certain attributes will be saved. This page explains what M3u attributes will be read. Advanced users can take a look at the source code. The parser will keep reading until it gets to the end (or crashes). Audio Only If audio-only is present, it will set the stream to be audio only. EPG An Electronic Programming Guide for the channel can be supplied through the epg-url attribute. Genres Genres for the channel are set from the attribute group-title or genres. Additionally, there is a Country property that can be set in your M3u playlist. It is denoted by two pound signs and then a new line. For example, having a playlist ike ## Australia ## #EXTINF:-1 group-title=&quot;news&quot;, Australia News http:\/\/example.com\/stream.m3u8 The genres for this channel will be &quot;News&quot; and &quot;Australia&quot;. Logo The channel logo is provided by tvg-logo. Name The name is set as the text following the final comma of a stream. In the example above, &quot;Australia News&quot; is the channel name. Number The channel number is first set by the number following #EXTINF, although if that is -1, then tvg-id is checked. If that isn't present, then the channel number will be an increasing counter. Plugin Source If this channel was created and is managed by a plugin, it can be set with the attribute cumulus-plugin. In general, you shouldn't set this yourself. Splashscreen The channel splashscreen can be set with the attribute splashscreen or tvg-splashscreen.","tags":"","url":"IPTV_Channels\/Parsing_M3U_Playlists.html"},{"title":"Linking to M3u Playlist","text":"One can find many M3U playlists online, and it may be more convenient to use this URL continually rather than having to import the channels just once. You can link to M3U playlists by going selecting the &quot;Link to M3u Playlist&quot; option. This option was added in version 1.7.0. Linking This opens up an activity where you can enter the URL. Then by clicking update, this link will be saved. As you enter a URL, the parser will try to interpret the file. It will display the number of channels it found. This can be a quick way to verify whether it will work. When you select the M3u Playlist option, all of the saved links will be displayed. You can select one of them to delete. These are internally represented as a JsonListing. Obtaining Channels Whenever the app is opened, it will start loading channels and adding temporary channels from these playlists. These will exist for the duration of the session. Troubleshooting If you are having issues getting the parser to interpret your channel, email the playlist to felker.tech@gmail.com to add it to the test suite.","tags":"","url":"IPTV_Channels\/Linking_to_M3u_Playlist.html"},{"title":"Genres","text":"Genres allow a way to organize large collections of information, whether it be books, music, or TV channels. In Cumulus TV, channels can be given genres that allow you to better find them in the app and in Live Channels. System Genres In the default channel editor, there is a way to set which genres you want a channel to be. When importing M3u playlists, there are attributes which can set the channels' genres. Cumulus TV will work with all genres, although Live Channels uses a subset of potential genres. Consider using these for maximum compatiblity: &quot;ANIMAL_WILDLIFE&quot; &quot;ARTS&quot; &quot;COMEDY&quot; &quot;DRAMA&quot; &quot;EDUCATION&quot; &quot;ENTERTAINMENT&quot; &quot;FAMILY_KIDS&quot; &quot;GAMING&quot; &quot;LIFE_STYLE&quot; &quot;MOVIES&quot; &quot;MUSIC&quot; &quot;NEWS&quot; &quot;PREMIER&quot; &quot;SHOPPING&quot; &quot;SPORTS&quot; &quot;TECH_SCIENCE&quot; &quot;TRAVEL&quot;","tags":"","url":"IPTV_Channels\/Genres.html"},{"title":"Privacy Policy","text":"Privacy Policy for Cumulus TV Cumulus TV is an open-source app which allows users to create their own channels and stream content from around the web through Android TV's Live Channels app. Cumulus TV contains a variety of helpful features which allow users to get the best user experience. User Accounts One of these features is being able to sync your channel data to Google Drive, allowing users to access the same channels on all of their devices. This is completely optional. Without this, channels can still be created locally. No information about your account or files are used beyond what is necessary for syncing to function.","tags":"","url":"Privacy_Policy.html"},{"title":"Introduction","text":"There are many live streaming services, such as Periscope or Twitch, that have a complicated stream URL. They are difficult to memorize and expire after the stream is over, making it unreasonable for a user to add these streams to Live Channels. However, there are APIs which exist to obtain their source URL for a streaming user. To allow third-party developers to add functionality to Cumulus TV, there is a plugin system in place. A plugin can be developed that will allow a third-party app to add, modify, or delete a channel through a simple API. It can also be called by CumulusTV when a channel is being tuned in order to actually obtain the stream URL. Plugins that modify a channel will automatically add a source attribute to that channel with your package name. This is used by CumulusTV in order to select the right app when editing or playing. The dialog activity that appears when you are adding or editing a chanel is actually a plugin itself. Requirements Android Studio - As plugins are just part of an Android app, you will need Android Studio downloaded and setup Plugin library - In your project, add a line to add the CumulusTV plugin library, which is needed to generate plugins Make sure you setup your gradle files to support JitPack You can use the same release version as the application version. CumulusTV - You will need this app installed on your test device in order to properly interface with it. Keep in mind that your dependency version should be the same as the app version for ideal compatibility. Add to your gradle file: repositories { ... maven { url 'https:\/\/jitpack.io' } } And then add the dependency dependencies { compile 'com.github.Fleker:CumulusTV:1.7.+' } Get Started Create a new activity (making sure it's added to your AndroidManifest.xml) and have it extend the CumulusTvPlugin class. public class ListingPlugin extends CumulusTvPlugin Your activity can have any UI and functionality that it wants to select channels and other types of data. In onCreate, execute these two methods: setLabel(&quot;&quot;); setProprietaryEditing(false); If you set proprietary editing to true, only your app will be able to modify it in the future. It will set another parameter, service, to the value set by the label in setLabel. Identify Intent Your plugin may be activated by the user adding a new item, editing a current item, or reading items. You can use the methods: areEditing() areAdding() areReadingAll() Not every action needs to be supported, and if not, your plugin should exit the activity with finish() and provide a toast message saying the operation is unsupported. More API support for this may come in the future. Get Item to Edit If your plugin was activated to edit a currently existing item, you can obtain that by calling getChannel() to get a CumulusChannel or getJson() to get the raw JSON. You may prefer the raw JSON if you're using a custom type. Creating Custom Types A custom type must have a type attribute in the JSON. This will prevent it from being edited by the app. JsonContainer Interface Custom types may benefit from having a separate class that implements JsonContainer. This will allow the app to parse that data and provides common methods that can be called on any item. Saving Item You should create a new CumulusChannel using the CumulusChannel.Builder class or creating a new type that implements JsonContainer. Then, your app should finish by calling save(Object). This will save the data to the app and resync while also ending your activity. This should be the final action called, so any clean-up should be performed beforehand. Directly Calling Intents To open up one of these activities with a certain action, make sure to set the action to one of the options above. For example, Intent i = new Intent(getActivity(), ListingPlugin.class); i.putExtra(CumulusTvPlugin.INTENT_EXTRA_ACTION, CumulusTvPlugin.INTENT_ADD); startActivity(i); More Info Want to see some examples? You can look at the MainPicker and ListingPlugin activities. Both use the same plugin interfaces that developers have access to.","tags":"","url":"Plugin_API\/Introduction.html"},{"title":"Release Notes","text":"1.7.0 New JsonContainer interface A handful of API fixes 1.6.0 Library now available on Gradle New classes are available","tags":"","url":"Plugin_API\/Release_Notes.html"},{"title":"Common Issues","text":"Many users may run into the same problems. Here is a current list of bugs and issues in the app, along with potential workarounds. App Issues Not supported on my device? Playback Issues Stream {x} doesn't play! Stream plays in the app but not Live Channels Syncing Issues I can't get my files to sync Stability Issues The app keeps crashing My JSON file is not working App Issues Not supported on my device? CumulusTV is currently only supported on Android TV. There is some work going into supporting phones again. In the meantime, you can sideload it. Playback Issues Stream {x} doesn't play! CumulusTV, both in the app and in Live Channels uses the ExoPlayer project for playback of media. If you are unable to play your stream in the app, there's not much that can be done in terms of a fix. Try contacting the source of the stream and making sure that the codec is correct and that there are no typos in the stream tags. You can go into the quick settings and report a playback issue. Stream plays in the app but not Live Channels If the stream plays correctly inside the app, then there is another issue that is preventing Live Channels from displaying content on screen. This may have involved a background crash. I receive crash reports and may be able to find a fix. Syncing Issues I can't get my files to sync Are you having problems with Google Drive? Confirm the file that you chose. If you're experiencing issues, wait a little bit for the device to do a full resync of Google Drive and you should see the file showing up. If you're still having problems, write a bug report. Stability Issues The app keeps crashing Cumulus TV has a built-in crash reporting library. Whenever the app crashes, I get a notification about it along with some basic metadata. My JSON file is not working The JSON file is the backend data for the app. If that is improperly formatted, channels may not show up or the app may not work properly. There are some errors which may display, requiring the data to be deleted to allow the app to run properly. If you're having an issue, try using a validation tool like JSON Lint to make sure there are no problems.","tags":"","url":"Troubleshooting\/Common_Issues.html"}]}